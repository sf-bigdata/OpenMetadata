# Generated from /Users/I521853/workspace/dataplatform/OpenMetadata/openmetadata-spec/src/main/antlr4/org/openmetadata/schema/EntityLink.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\t")
        buf.write("\u00f8\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\5\4\u00cd\n\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5")
        buf.write("\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\5\3\5\5\5\u00ea\n\5\3\6\3\6\3\6\3\7\6\7\u00f0")
        buf.write("\n\7\r\7\16\7\u00f1\3\b\6\b\u00f5\n\b\r\b\16\b\u00f6\2")
        buf.write("\2\t\3\3\5\4\7\5\t\6\13\7\r\b\17\t\3\2\4\3\2c|\n\2$$)")
        buf.write(").\60\62;C\\^^aac|\2\u0111\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\3\21\3\2\2\2\5\25\3\2\2\2\7\u00cc\3\2\2\2\t\u00e9")
        buf.write("\3\2\2\2\13\u00eb\3\2\2\2\r\u00ef\3\2\2\2\17\u00f4\3\2")
        buf.write("\2\2\21\22\7>\2\2\22\23\7%\2\2\23\24\7G\2\2\24\4\3\2\2")
        buf.write("\2\25\26\7@\2\2\26\6\3\2\2\2\27\30\7v\2\2\30\31\7c\2\2")
        buf.write("\31\32\7d\2\2\32\33\7n\2\2\33\u00cd\7g\2\2\34\35\7f\2")
        buf.write("\2\35\36\7c\2\2\36\37\7v\2\2\37 \7c\2\2 !\7d\2\2!\"\7")
        buf.write("c\2\2\"#\7u\2\2#\u00cd\7g\2\2$%\7f\2\2%&\7c\2\2&\'\7v")
        buf.write("\2\2\'(\7c\2\2()\7d\2\2)*\7c\2\2*+\7u\2\2+,\7g\2\2,-\7")
        buf.write("U\2\2-.\7e\2\2./\7j\2\2/\60\7g\2\2\60\61\7o\2\2\61\u00cd")
        buf.write("\7c\2\2\62\63\7o\2\2\63\64\7g\2\2\64\65\7v\2\2\65\66\7")
        buf.write("t\2\2\66\67\7k\2\2\678\7e\2\28\u00cd\7u\2\29:\7f\2\2:")
        buf.write(";\7c\2\2;<\7u\2\2<=\7j\2\2=>\7d\2\2>?\7q\2\2?@\7c\2\2")
        buf.write("@A\7t\2\2A\u00cd\7f\2\2BC\7r\2\2CD\7k\2\2DE\7r\2\2EF\7")
        buf.write("g\2\2FG\7n\2\2GH\7k\2\2HI\7p\2\2I\u00cd\7g\2\2JK\7e\2")
        buf.write("\2KL\7j\2\2LM\7c\2\2MN\7t\2\2N\u00cd\7v\2\2OP\7t\2\2P")
        buf.write("Q\7g\2\2QR\7r\2\2RS\7q\2\2ST\7t\2\2T\u00cd\7v\2\2UV\7")
        buf.write("v\2\2VW\7q\2\2WX\7r\2\2XY\7k\2\2Y\u00cd\7e\2\2Z[\7o\2")
        buf.write("\2[\\\7n\2\2\\]\7o\2\2]^\7q\2\2^_\7f\2\2_`\7g\2\2`\u00cd")
        buf.write("\7n\2\2ab\7d\2\2bc\7q\2\2c\u00cd\7v\2\2de\7V\2\2ef\7J")
        buf.write("\2\2fg\7T\2\2gh\7G\2\2hi\7C\2\2i\u00cd\7F\2\2jk\7n\2\2")
        buf.write("kl\7q\2\2lm\7e\2\2mn\7c\2\2no\7v\2\2op\7k\2\2pq\7q\2\2")
        buf.write("q\u00cd\7p\2\2rs\7i\2\2st\7n\2\2tu\7q\2\2uv\7u\2\2vw\7")
        buf.write("u\2\2wx\7c\2\2xy\7t\2\2y\u00cd\7{\2\2z{\7i\2\2{|\7n\2")
        buf.write("\2|}\7q\2\2}~\7u\2\2~\177\7u\2\2\177\u0080\7c\2\2\u0080")
        buf.write("\u0081\7t\2\2\u0081\u0082\7{\2\2\u0082\u0083\7V\2\2\u0083")
        buf.write("\u0084\7g\2\2\u0084\u0085\7t\2\2\u0085\u00cd\7o\2\2\u0086")
        buf.write("\u0087\7v\2\2\u0087\u0088\7c\2\2\u0088\u00cd\7i\2\2\u0089")
        buf.write("\u008a\7e\2\2\u008a\u008b\7n\2\2\u008b\u008c\7c\2\2\u008c")
        buf.write("\u008d\7u\2\2\u008d\u008e\7u\2\2\u008e\u008f\7k\2\2\u008f")
        buf.write("\u0090\7h\2\2\u0090\u0091\7k\2\2\u0091\u0092\7e\2\2\u0092")
        buf.write("\u0093\7c\2\2\u0093\u0094\7v\2\2\u0094\u0095\7k\2\2\u0095")
        buf.write("\u0096\7q\2\2\u0096\u00cd\7p\2\2\u0097\u0098\7v\2\2\u0098")
        buf.write("\u0099\7{\2\2\u0099\u009a\7r\2\2\u009a\u00cd\7g\2\2\u009b")
        buf.write("\u009c\7v\2\2\u009c\u009d\7g\2\2\u009d\u009e\7u\2\2\u009e")
        buf.write("\u009f\7v\2\2\u009f\u00a0\7F\2\2\u00a0\u00a1\7g\2\2\u00a1")
        buf.write("\u00a2\7h\2\2\u00a2\u00a3\7k\2\2\u00a3\u00a4\7p\2\2\u00a4")
        buf.write("\u00a5\7k\2\2\u00a5\u00a6\7v\2\2\u00a6\u00a7\7k\2\2\u00a7")
        buf.write("\u00a8\7q\2\2\u00a8\u00cd\7p\2\2\u00a9\u00aa\7v\2\2\u00aa")
        buf.write("\u00ab\7g\2\2\u00ab\u00ac\7u\2\2\u00ac\u00ad\7v\2\2\u00ad")
        buf.write("\u00ae\7U\2\2\u00ae\u00af\7w\2\2\u00af\u00b0\7k\2\2\u00b0")
        buf.write("\u00b1\7v\2\2\u00b1\u00cd\7g\2\2\u00b2\u00b3\7v\2\2\u00b3")
        buf.write("\u00b4\7g\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7v\2\2\u00b6")
        buf.write("\u00b7\7E\2\2\u00b7\u00b8\7c\2\2\u00b8\u00b9\7u\2\2\u00b9")
        buf.write("\u00cd\7g\2\2\u00ba\u00bb\7f\2\2\u00bb\u00bc\7c\2\2\u00bc")
        buf.write("\u00bd\7u\2\2\u00bd\u00be\7j\2\2\u00be\u00bf\7d\2\2\u00bf")
        buf.write("\u00c0\7q\2\2\u00c0\u00c1\7c\2\2\u00c1\u00c2\7t\2\2\u00c2")
        buf.write("\u00c3\7f\2\2\u00c3\u00c4\7F\2\2\u00c4\u00c5\7c\2\2\u00c5")
        buf.write("\u00c6\7v\2\2\u00c6\u00c7\7c\2\2\u00c7\u00c8\7O\2\2\u00c8")
        buf.write("\u00c9\7q\2\2\u00c9\u00ca\7f\2\2\u00ca\u00cb\7g\2\2\u00cb")
        buf.write("\u00cd\7n\2\2\u00cc\27\3\2\2\2\u00cc\34\3\2\2\2\u00cc")
        buf.write("$\3\2\2\2\u00cc\62\3\2\2\2\u00cc9\3\2\2\2\u00ccB\3\2\2")
        buf.write("\2\u00ccJ\3\2\2\2\u00ccO\3\2\2\2\u00ccU\3\2\2\2\u00cc")
        buf.write("Z\3\2\2\2\u00cca\3\2\2\2\u00ccd\3\2\2\2\u00ccj\3\2\2\2")
        buf.write("\u00ccr\3\2\2\2\u00ccz\3\2\2\2\u00cc\u0086\3\2\2\2\u00cc")
        buf.write("\u0089\3\2\2\2\u00cc\u0097\3\2\2\2\u00cc\u009b\3\2\2\2")
        buf.write("\u00cc\u00a9\3\2\2\2\u00cc\u00b2\3\2\2\2\u00cc\u00ba\3")
        buf.write("\2\2\2\u00cd\b\3\2\2\2\u00ce\u00cf\7e\2\2\u00cf\u00d0")
        buf.write("\7q\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2\7w\2\2\u00d2\u00d3")
        buf.write("\7o\2\2\u00d3\u00d4\7p\2\2\u00d4\u00ea\7u\2\2\u00d5\u00d6")
        buf.write("\7f\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8\7u\2\2\u00d8\u00d9")
        buf.write("\7e\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7k\2\2\u00db\u00dc")
        buf.write("\7r\2\2\u00dc\u00dd\7v\2\2\u00dd\u00de\7k\2\2\u00de\u00df")
        buf.write("\7q\2\2\u00df\u00ea\7p\2\2\u00e0\u00e1\7v\2\2\u00e1\u00e2")
        buf.write("\7c\2\2\u00e2\u00e3\7i\2\2\u00e3\u00ea\7u\2\2\u00e4\u00e5")
        buf.write("\7v\2\2\u00e5\u00e6\7c\2\2\u00e6\u00e7\7u\2\2\u00e7\u00e8")
        buf.write("\7m\2\2\u00e8\u00ea\7u\2\2\u00e9\u00ce\3\2\2\2\u00e9\u00d5")
        buf.write("\3\2\2\2\u00e9\u00e0\3\2\2\2\u00e9\u00e4\3\2\2\2\u00ea")
        buf.write("\n\3\2\2\2\u00eb\u00ec\7<\2\2\u00ec\u00ed\7<\2\2\u00ed")
        buf.write("\f\3\2\2\2\u00ee\u00f0\t\2\2\2\u00ef\u00ee\3\2\2\2\u00f0")
        buf.write("\u00f1\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2")
        buf.write("\u00f2\16\3\2\2\2\u00f3\u00f5\t\3\2\2\u00f4\u00f3\3\2")
        buf.write("\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7")
        buf.write("\3\2\2\2\u00f7\20\3\2\2\2\7\2\u00cc\u00e9\u00f1\u00f6")
        buf.write("\2")
        return buf.getvalue()


class EntityLinkLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    ENTITY_TYPE = 3
    ENTITY_FIELD = 4
    RESERVED = 5
    ENTITY_ATTRIBUTE = 6
    ENTITY_FQN = 7

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<#E'", "'>'", "'::'" ]

    symbolicNames = [ "<INVALID>",
            "ENTITY_TYPE", "ENTITY_FIELD", "RESERVED", "ENTITY_ATTRIBUTE", 
            "ENTITY_FQN" ]

    ruleNames = [ "T__0", "T__1", "ENTITY_TYPE", "ENTITY_FIELD", "RESERVED", 
                  "ENTITY_ATTRIBUTE", "ENTITY_FQN" ]

    grammarFileName = "EntityLink.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


