# generated by datamodel-codegen:
#   filename:  entity/services/connections/metadata/metadataESConnection.json
#   timestamp: 2023-12-13T07:28:36+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field

from .. import connectionBasicType


class MetadataESType(Enum):
    MetadataES = 'MetadataES'


class MetadataESConnection(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[MetadataESType] = Field(
        MetadataESType.MetadataES, description='Service Type'
    )
    includeTopics: Optional[bool] = Field(
        'true', description='Include Topics for Indexing'
    )
    includeTables: Optional[bool] = Field(
        'true', description='Include Tables for Indexing'
    )
    includeDashboards: Optional[bool] = Field(
        'true', description='Include Dashboards for Indexing'
    )
    includePipelines: Optional[bool] = Field(
        'true', description='Include Pipelines for Indexing'
    )
    includeMlModels: Optional[bool] = Field(
        'true', description='Include MlModels for Indexing'
    )
    includeUsers: Optional[bool] = Field(
        'true', description='Include Users for Indexing'
    )
    includeTeams: Optional[bool] = Field(
        'true', description='Include Teams for Indexing'
    )
    includeGlossaryTerms: Optional[bool] = Field(
        'true', description='Include Glossary Terms for Indexing'
    )
    includePolicy: Optional[bool] = Field(True, description='Include Tags for Policy')
    includeMessagingServices: Optional[bool] = Field(
        True, description='Include Messaging Services for Indexing'
    )
    includeDatabaseServices: Optional[bool] = Field(
        True, description='Include Database Services for Indexing'
    )
    includePipelineServices: Optional[bool] = Field(
        True, description='Include Pipeline Services for Indexing'
    )
    includeTags: Optional[bool] = Field(True, description='Include Tags for Indexing')
    includeContainers: Optional[bool] = Field(
        True, description='Include Containers for Indexing'
    )
    includeStorageServices: Optional[bool] = Field(
        True, description='Include Storage Services for Indexing'
    )
    includeQueries: Optional[bool] = Field(
        True, description='Include Queries for Indexing'
    )
    limitRecords: Optional[int] = Field(
        '1000', description='Limit the number of records for Indexing.'
    )
    supportsMetadataExtraction: Optional[
        connectionBasicType.SupportsMetadataExtraction
    ] = None
