# generated by datamodel-codegen:
#   filename:  events/subscriptionResourceDescriptor.json
#   timestamp: 2023-12-13T07:28:36+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Extra, Field


class Operation(Enum):
    matchAnySource = 'matchAnySource'
    matchAnyOwnerName = 'matchAnyOwnerName'
    matchAnyEntityFqn = 'matchAnyEntityFqn'
    matchAnyEntityId = 'matchAnyEntityId'
    matchAnyEventType = 'matchAnyEventType'
    matchTestResult = 'matchTestResult'
    matchUpdatedBy = 'matchUpdatedBy'
    matchIngestionPipelineState = 'matchIngestionPipelineState'
    matchAnyFieldChange = 'matchAnyFieldChange'


class SubscriptionResourceDescriptor(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = Field(
        None,
        description='Name of the resource. For entity related resources, resource name is same as the entity name. Some resources such as lineage are not entities but are resources.',
    )
    supportedFilters: Optional[List[Operation]] = Field(
        None, description='List of operations supported filters by the resource.'
    )
