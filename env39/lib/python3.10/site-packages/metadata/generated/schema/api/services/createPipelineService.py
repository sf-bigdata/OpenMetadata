# generated by datamodel-codegen:
#   filename:  api/services/createPipelineService.json
#   timestamp: 2023-12-13T07:28:36+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field

from ...entity.services import pipelineService
from ...type import basic, entityReference, tagLabel


class CreatePipelineServiceRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    name: basic.EntityName = Field(
        ..., description='Name that identifies the this entity instance uniquely'
    )
    displayName: Optional[str] = Field(
        None, description='Display Name that identifies this pipeline service.'
    )
    description: Optional[basic.Markdown] = Field(
        None, description='Description of pipeline service entity.'
    )
    serviceType: pipelineService.PipelineServiceType
    connection: pipelineService.PipelineConnection
    tags: Optional[List[tagLabel.TagLabel]] = Field(
        None, description='Tags for this Pipeline Service.'
    )
    owner: Optional[entityReference.EntityReference] = Field(
        None, description='Owner of this pipeline service.'
    )
